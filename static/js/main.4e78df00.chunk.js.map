{"version":3,"sources":["app/dishes.js","components/Pizza.js","components/Soup.js","components/Snadwich.js","components/dishes.js","App.js","app/store.js","index.js","components/dishes.module.css"],"names":["dishesSlice","createSlice","name","initialState","name_of_dish","preparation_time","no_of_slice","diameter","spiciness","slices_of_bread","type_of_dish","id","reducers","onChangeSpicinnes","state","action","payload","onChangeNoOfSlice","onDiameterChange","onChangeSlicesOfBread","onChangeTypeOfDish","onChangeNameOfDish","onChangePrepartionTime","onChangeId","dishesActions","actions","Pizza","dispatch","useDispatch","noOfSlice","useSelector","dishes","className","classes","dishesForm","htmlFor","type","value","onChange","e","target","step","Soup","spiccnesesOfDish","min","max","Sandwich","slicesOfBread","Dishes","typeOfDish","nameOfDish","preparationTime","formIsValid","sendData","body","a","fetch","method","headers","JSON","stringify","then","response","json","data","console","log","catch","error","alert","onSubmit","preventDefault","no_of_slices","spiciness_scale","wrong","good","select","defaultValue","disabled","App","store","configureStore","reducer","dishesReducer","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4e78df00.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialDishesState = {\r\n  name_of_dish: \"\",\r\n  preparation_time: \"\",\r\n  no_of_slice: 0,\r\n  diameter: 0,\r\n  spiciness: 1,\r\n  slices_of_bread: 0,\r\n  type_of_dish: \"\",\r\n  id: 0\r\n};\r\nconst dishesSlice = createSlice({\r\n  name: \"dishes\",\r\n  initialState: initialDishesState,\r\n  reducers: {\r\n    onChangeSpicinnes(state, action) {\r\n      state.spiciness = action.payload;\r\n    },\r\n    onChangeNoOfSlice(state, action) {\r\n      state.no_of_slice = action.payload;\r\n    },\r\n    onDiameterChange(state, action) {\r\n      state.diameter = action.payload;\r\n    },\r\n    onChangeSlicesOfBread(state, action) {\r\n      state.slices_of_bread = action.payload;\r\n    },\r\n    onChangeTypeOfDish(state, action) {\r\n      state.type_of_dish = action.payload;\r\n    },\r\n    onChangeNameOfDish(state, action) {\r\n      state.name_of_dish = action.payload;\r\n    },\r\n    onChangePrepartionTime(state, action) {\r\n      state.preparation_time = action.payload;\r\n    },\r\n    onChangeId(state) {\r\n      state.id = state.id + 1;\r\n    }\r\n  },\r\n});\r\n\r\nexport const dishesActions = dishesSlice.actions;\r\n\r\nexport default dishesSlice.reducer;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { dishesActions } from \"../app/dishes\";\r\nimport classes from './dishes.module.css';\r\n\r\nconst Pizza = () => {\r\n  const dispatch = useDispatch();\r\n  const noOfSlice = useSelector((state) => state.dishes.no_of_slice);\r\n  const diameter = useSelector((state) => state.dishes.diameter);\r\n  const onDiameterChange = (e) => {\r\n    dispatch(dishesActions.onDiameterChange(e.target.value));\r\n  };\r\n  const onNoOfSliceChange = (e) => {\r\n    dispatch(dishesActions.onChangeNoOfSlice(e.target.value));\r\n  };\r\n  return (\r\n    <div className={classes.dishesForm}>\r\n      <label htmlFor=\"no_of_slice\">Number of Slice</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"no_of_slice\"\r\n        id=\"no_of_slice\"\r\n        value={noOfSlice}\r\n        onChange={onNoOfSliceChange}\r\n      />\r\n\r\n      <label htmlFor=\"diameter\">Diameter</label>\r\n      <input\r\n        type=\"number\"\r\n        step=\"0.1\"\r\n        name=\"diameter\"\r\n        id=\"diameter\"\r\n        value={diameter}\r\n        onChange={onDiameterChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pizza;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport classes from \"./dishes.module.css\";\r\nimport { dishesActions } from \"../app/dishes\";\r\n\r\nconst Soup = () => {\r\n  const dispatch = useDispatch();\r\n  const spiccnesesOfDish = useSelector((state) => state.dishes.spiciness);\r\n  const onChangeSpicnnes = (e) => {\r\n    dispatch(dishesActions.onChangeSpicinnes(e.target.value));\r\n  };\r\n  return (\r\n    <div className={classes.dishesForm}>\r\n      <label htmlFor=\"spiciness_scale\">Spiciness</label>\r\n      <input\r\n        type=\"range\"\r\n        value={spiccnesesOfDish}\r\n        min=\"1\"\r\n        max=\"10\"\r\n        name=\"spiciness_scale\"\r\n        id=\"spiciness_scale\"\r\n        onChange={onChangeSpicnnes}\r\n      />\r\n      {spiccnesesOfDish}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Soup;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { dishesActions } from \"../app/dishes\";\r\nimport classes from \"./dishes.module.css\";\r\n\r\nconst Sandwich = () => {\r\n  const dispatch = useDispatch();\r\n  const slicesOfBread = useSelector((state) => state.dishes.slices_of_bread);\r\n  const onChangeSlicesOfBread = (e) => {\r\n    dispatch(dishesActions.onChangeSlicesOfBread(e.target.value));\r\n  };\r\n  return (\r\n    <div className={classes.dishesForm}>\r\n      <label htmlFor=\"slices_of_bread\">Slices of bread</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"slices_of_bread\"\r\n        id=\"slices_of_bread\"\r\n        value={slicesOfBread}\r\n        onChange={onChangeSlicesOfBread}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sandwich;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { dishesActions } from \"../app/dishes\";\r\nimport classes from \"./dishes.module.css\";\r\nimport Pizza from \"./Pizza\";\r\nimport Soup from \"./Soup\";\r\nimport Sandwich from \"./Snadwich\";\r\n\r\nconst Dishes = () => {\r\n  const dispatch = useDispatch();\r\n  const typeOfDish = useSelector((state) => state.dishes.type_of_dish);\r\n  const nameOfDish = useSelector((state) => state.dishes.name_of_dish);\r\n  const preparationTime = useSelector((state) => state.dishes.preparation_time);\r\n  const slicesOfBread = useSelector((state) => state.dishes.slices_of_bread);\r\n  const spiccnesesOfDish = useSelector((state) => state.dishes.spiciness);\r\n  const noOfSlice = useSelector((state) => state.dishes.no_of_slice);\r\n  const diameter = useSelector((state) => state.dishes.diameter);\r\n  const id = useSelector((state) => state.dishes.id);\r\n  let formIsValid = false;\r\n  const onChangeDish = (e) => {\r\n    dispatch(dishesActions.onChangeTypeOfDish(e.target.value));\r\n  };\r\n  const onChangeNameOfDish = (e) => {\r\n    dispatch(dishesActions.onChangeNameOfDish(e.target.value));\r\n  };\r\n  const onChangePreparationTime = (e) => {\r\n    dispatch(dishesActions.onChangePrepartionTime(e.target.value));\r\n  };\r\n  const sendData = async (body) => {\r\n    await fetch(\"https://frosty-wood-6558.getsandbox.com/dishes\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Something went wrong: \" + error);\r\n      });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(dishesActions.onChangeId());\r\n    if (typeOfDish === \"pizza\") {\r\n      const dish = {\r\n        type: typeOfDish,\r\n        name: nameOfDish,\r\n        preparation_time: preparationTime,\r\n        no_of_slices: +noOfSlice,\r\n        diameter: +diameter,\r\n      };\r\n      sendData(dish);\r\n    }\r\n    if (typeOfDish === \"soup\") {\r\n      const dish = {\r\n        type: typeOfDish,\r\n        name: nameOfDish,\r\n        preparation_time: preparationTime,\r\n        spiciness_scale: +spiccnesesOfDish,\r\n        id: id,\r\n      };\r\n      sendData(dish);\r\n    }\r\n    if (typeOfDish === \"sandwich\") {\r\n      const dish = {\r\n        type: typeOfDish,\r\n        name: nameOfDish,\r\n        preparation_time: preparationTime,\r\n        slices_of_bread: +slicesOfBread,\r\n        id: id,\r\n      };\r\n      sendData(dish);\r\n    }\r\n  };\r\n  if (typeOfDish === \"pizza\") {\r\n    if (\r\n      nameOfDish !== \"\" &&\r\n      preparationTime !== \"\" &&\r\n      +noOfSlice > 0 &&\r\n      +diameter > 0\r\n    ) {\r\n      formIsValid = true;\r\n    }\r\n  }\r\n  if (typeOfDish === 'soup'){\r\n    if (\r\n      nameOfDish !== \"\" &&\r\n      preparationTime !== \"\" &&\r\n      +spiccnesesOfDish > 0\r\n    ) {\r\n      formIsValid = true;\r\n    }\r\n  }\r\n  if (typeOfDish === 'sandwich'){\r\n    if (\r\n      nameOfDish !== \"\" &&\r\n      preparationTime !== \"\" &&\r\n      +slicesOfBread > 0\r\n    ) {\r\n      formIsValid = true;\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.dishes}>\r\n      <form className={classes.dishesForm} onSubmit={onSubmit}>\r\n      {!formIsValid && <div className={classes.wrong}>Please fill in the blank fields</div>}\r\n      {formIsValid && <div className={classes.good}>Thank You. Have a good day</div>}\r\n        <label htmlFor=\"name-of-dish\">Name </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name-of-dish\"\r\n          value={nameOfDish}\r\n          onChange={onChangeNameOfDish}\r\n        />\r\n\r\n        <label htmlFor=\"preparation-time\">Preparation Time </label>\r\n        <input\r\n          type=\"time\"\r\n          id=\"preparation-time\"\r\n          step=\"2\"\r\n          value={preparationTime}\r\n          onChange={onChangePreparationTime}\r\n        />\r\n\r\n        <p>Choose type of dish</p>\r\n        <select className={classes.select} onChange={onChangeDish}>\r\n          <option defaultValue value=\"none\">\r\n            Select dish\r\n          </option>\r\n          <option value=\"pizza\">Pizza</option>\r\n          <option value=\"soup\">Soup</option>\r\n          <option value=\"sandwich\">Sandwich</option>\r\n        </select>\r\n        {typeOfDish === \"pizza\" && <Pizza />}\r\n        {typeOfDish === \"soup\" && <Soup />}\r\n        {typeOfDish === \"sandwich\" && <Sandwich />}\r\n        <button disabled={!formIsValid} type=\"submit\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dishes;\r\n","import React from 'react';\nimport './App.css';\nimport Dishes from './components/dishes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dishes />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport dishesReducer from \"./dishes\";\n\nexport const store = configureStore({\n  reducer: {\n    dishes: dishesReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dishesForm\":\"dishes_dishesForm__2p29e\",\"dishes\":\"dishes_dishes__25BcI\",\"notValidInput\":\"dishes_notValidInput__1yUJA\",\"wrong\":\"dishes_wrong__3jk_F\",\"good\":\"dishes_good__2-mu5\"};"],"sourceRoot":""}